name: Deploy (Terraform -> Ansible)

# Требуются secrets:
# YC_SA_KEY_JSON (base64 JSON ключа SA), YC_CLOUD_ID, YC_FOLDER_ID,
# SSH_USER, SSH_PUBLIC_KEY, SSH_PRIVATE_KEY,
# YC_TFSTATE_BUCKET, YC_OBS_ACCESS_KEY_ID, YC_OBS_SECRET_ACCESS_KEY

on:
  workflow_dispatch: {}
  push:
    branches:
      - master
    paths:
      - 'terraform/**'
      - 'ansible/**'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: "true"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # ---------- Terraform ----------
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.6.6'

      - name: Write SA key (from base64 secret)
        working-directory: terraform
        env:
          KEY_B64: ${{ secrets.YC_SA_KEY_JSON }}
        shell: bash
        run: |
          set -euo pipefail
          python3 - <<'PY'
          import os, base64, json
          data = base64.b64decode(os.environ['KEY_B64'])
          json.loads(data.decode('utf-8'))   # validate JSON
          open('key.json','wb').write(data)
          PY
          chmod 600 key.json

      - name: Terraform Init (remote state in YC Object Storage)
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID:     ${{ secrets.YC_OBS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YC_OBS_SECRET_ACCESS_KEY }}
        run: |
          terraform init -input=false \
            -backend-config="endpoint=storage.yandexcloud.net" \
            -backend-config="bucket=${{ secrets.YC_TFSTATE_BUCKET }}" \
            -backend-config="key=infra/terraform.tfstate" \
            -backend-config="region=ru-central1" \
            -backend-config="skip_region_validation=true" \
            -backend-config="skip_credentials_validation=true" \
            -backend-config="force_path_style=true"

      - name: Terraform Apply
        working-directory: terraform
        env:
          TF_VAR_cloud_id:       ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_folder_id:      ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_zone:           ru-central1-a
          TF_VAR_service_account_key_file: key.json
          TF_VAR_ssh_user:       ${{ secrets.SSH_USER }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform apply -auto-approve -input=false

      - name: Grab public IP
        id: tfout
        working-directory: terraform
        run: echo "PUBLIC_IP=$(terraform output -raw public_ip)" >> "$GITHUB_OUTPUT"

      # ---------- Ansible ----------
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python3 -m pip install --upgrade pip wheel
          pip install "ansible-core==2.16.8"
          ansible --version

      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ steps.tfout.outputs.PUBLIC_IP }}" >> ~/.ssh/known_hosts

      - name: Run Ansible playbook
        working-directory: ansible
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
        run: |
          cat > inventory.ini <<'EOF'
          [web]
          ${{ steps.tfout.outputs.PUBLIC_IP }} ansible_user=${{ secrets.SSH_USER }} ansible_ssh_private_key_file=~/.ssh/id_rsa
          EOF
          ansible -i inventory.ini web -m ping
          ansible-playbook -i inventory.ini playbooks/site.yml
